version: "3.8"
services:
  app:
    container_name: Starwars
    build:
      context: ./
      dockerfile: ./.docker/php-fpm/Dockerfile
    restart: unless-stopped
    volumes:
      - ./:/var/www/
      - .docker/php-fpm/entrypoint/docker-entrypoint.sh:/opt/docker-entrypoint.sh:ro
    depends_on:
      - database
    networks:
      - docker
  dozzle:
    container_name: dozzle_logs
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9080:8080"
    environment:
      DOZZLE_LEVEL: trace
    healthcheck:
      test: [ "CMD", "/dozzle", "healthcheck" ]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - docker
  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - .docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - docker
  database:
    container_name: db_mysql
    build:
      context: ./
      dockerfile: ./.docker/mysql/Dockerfile
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./.docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./.docker/mysql/data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
       - docker
  phpmyadmin:
    image: phpmyadmin
    container_name: php_my_admin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=database
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
    networks:
      - docker
  redis:
    container_name: redis
    image: redis
    restart: unless-stopped
    volumes:
      - .docker/redis/data:/data
    networks:
      - docker
    ports:
      - "6379:6379"
  mailcatcher:
    image: schickling/mailcatcher:latest
    ports:
      - "1025:1025"
      - "1080:1080"
networks:
  docker:
    name: docker
